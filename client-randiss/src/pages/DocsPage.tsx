import React, { useState } from 'react';
import { 
  Box, 
  Typography, 
  Card, 
  CardContent, 
  Grid, 
  Paper,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Chip,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  IconButton,
  Tooltip
} from '@mui/material';
import { motion } from 'framer-motion';
import { 
  Security, 
  Science, 
  Speed,
  Satellite,
  Description,
  ExpandMore,
  ContentCopy,
  CheckCircle
} from '@mui/icons-material';

const DocsPage: React.FC = () => {
  const [copiedCode, setCopiedCode] = useState<string | null>(null);

  const copyToClipboard = async (text: string, id: string) => {
    try {
      await navigator.clipboard.writeText(text);
      setCopiedCode(id);
      setTimeout(() => setCopiedCode(null), 2000);
    } catch (err) {
      console.error('Failed to copy text: ', err);
    }
  };

  const features = [
    {
      icon: <Satellite />,
      title: '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω—Ç—Ä–æ–ø–∏–∏',
      description: '–ò—Å–ø–æ–ª—å–∑—É–µ–º 7 –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏',
      details: [
        'CU Randomness Beacon - –∫–≤–∞–Ω—Ç–æ–≤–∞—è —ç–Ω—Ç—Ä–æ–ø–∏—è',
        'Random.org - –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–µ —à—É–º—ã',
        'NIST Beacon - –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç',
        'ISS Position - –ø–æ–∑–∏—Ü–∏—è –ú–ö–° –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
        'Space Weather - –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –ø–æ–≥–æ–¥–∞',
        'Internet Entropy - –≥–∏–±—Ä–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
        'OpenWeatherMap - –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ'
      ]
    },
    {
      icon: <Security />,
      title: '–ü–æ–ª–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å',
      description: '–ö–∞–∂–¥—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞',
      details: [
        'SHA-256 —Ö–µ—à –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        '–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞',
        '–í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏',
        '–ú–µ—Ç–æ–¥ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω—Ç—Ä–æ–ø–∏–∏',
        '–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞'
      ]
    },
    {
      icon: <Science />,
      title: 'NIST & DIEHARD —Ç–µ—Å—Ç—ã',
      description: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞',
      details: [
        '15 –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö NIST SP 800-22 —Ç–µ—Å—Ç–æ–≤',
        '12 DIEHARD —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤',
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞',
        '–î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–µ—Å—Ç—É',
        '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é'
      ]
    },
    {
      icon: <Speed />,
      title: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
      description: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—É—á–∞—é—Ç—Å—è –∑–∞ —Å–µ–∫—É–Ω–¥—ã',
      details: [
        '–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö',
        '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã',
        '–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
        '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤',
        'Fallback –º–µ—Ö–∞–Ω–∏–∑–º—ã'
      ]
    }
  ];

  const apiEndpoints = [
    {
      method: 'POST',
      path: '/api/generate',
      description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π',
      parameters: [
        { name: 'count', type: 'number', description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 6)' },
        { name: 'min', type: 'number', description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1)' },
        { name: 'max', type: 'number', description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 100)' },
        { name: 'sourcesToUse', type: 'array', description: '–ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ —Å –∏–º–µ–Ω–∞–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω—Ç—Ä–æ–ø–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è' },
        { name: 'combineMethod', type: 'string', description: '–ú–µ—Ç–æ–¥ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ("hash", "xor", "weighted")' },
        { name: 'runTests', type: 'boolean', description: '–ó–∞–ø—É—Å–∫–∞—Ç—å –ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: false)' }
      ],
      exampleRequest: `curl -X POST http://localhost:3001/api/generate \\
  -H "Content-Type: application/json" \\
  -d '{
    "count": 6,
    "min": 1,
    "max": 49,
    "sourcesToUse": ["cubeacon", "nist", "internet"],
    "combineMethod": "hash",
    "runTests": true
  }'`,
      exampleResponse: `{
  "success": true,
  "generationId": "gen_1729512000_abc123",
  "result": {
    "numbers": [7, 15, 23, 31, 42, 49],
    "method": "HASH",
    "hash": "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456",
    "timestamp": "2025-10-21T12:00:00.000Z"
  },
  "sources": [
    {
      "source": "CU Randomness Beacon",
      "icon": "‚öõÔ∏è",
      "type": "quantum_beacon",
      "proof": {
        "api_response": {...},
        "entropy_string_length": 256,
        "hash_rounds": 4
      }
    }
  ],
  "tests": {
    "overallScore": 85.7,
    "passed": true,
    "tests": {
      "frequency": {
        "name": "Frequency Test",
        "passed": true,
        "pValue": 0.234,
        "description": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω—É–ª–µ–π –∏ –µ–¥–∏–Ω–∏—Ü"
      }
    }
  }
}`
    },
    {
      method: 'GET',
      path: '/api/generate/sources',
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω—Ç—Ä–æ–ø–∏–∏',
      parameters: [],
      exampleRequest: `curl -X GET http://localhost:3001/api/generate/sources`,
      exampleResponse: `{
  "sources": [
    {
      "name": "cubeacon",
      "displayName": "CU Randomness Beacon",
      "type": "quantum_beacon",
      "icon": "‚öõÔ∏è",
      "available": true,
      "description": "–ö–≤–∞–Ω—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ –æ—Ç –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ö–æ–ª–æ—Ä–∞–¥–æ"
    },
    {
      "name": "iss",
      "displayName": "ISS Position",
      "type": "space_station",
      "icon": "üõ∞Ô∏è",
      "available": true,
      "description": "–ü–æ–∑–∏—Ü–∏—è –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–∏"
    }
  ]
}`
    },
    {
      method: 'POST',
      path: '/api/tests/generate-file',
      description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      parameters: [
        { name: 'scenario', type: 'string', description: '–°—Ü–µ–Ω–∞—Ä–∏–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ("quick", "standard", "full", "professional")' },
        { name: 'sourcesToUse', type: 'array', description: '–ò—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω—Ç—Ä–æ–ø–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)' }
      ],
      exampleRequest: `curl -X POST http://localhost:3001/api/tests/generate-file \\
  -H "Content-Type: application/json" \\
  -d '{
    "scenario": "professional",
    "sourcesToUse": ["cubeacon", "nist", "randomorg", "spaceweather", "internet", "openweathermap", "iss"]
  }'`,
      exampleResponse: `{
  "success": true,
  "fileName": "random_bits_1729512000.txt",
  "totalBits": 11000000,
  "splitReport": {
    "scenario": "professional",
    "targetBits": {
      "nist": 10000000,
      "diehard": 1000000,
      "total": 11000000
    },
    "efficiency": "4.8%",
    "expansionMethod": "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (<5%)",
    "availableTests": {
      "nist": 15,
      "diehard": 12
    }
  },
  "files": {
    "nist": {
      "content": "1010101010101010101010101010101010101010101010101010101010101010...",
      "lines": 125000,
      "bits": 10000000
    }
  },
  "instructions": {
    "nistSTS": "assess 10000000 < nist_file.txt",
    "dieharder": "dieharder -a -g 202 -f diehard_file.txt"
  }
}`
    },
    {
      method: 'POST',
      path: '/api/audit/analyze',
      description: '–ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª',
      parameters: [
        { name: 'numbers', type: 'array', description: '–ú–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å' },
        { name: 'auditId', type: 'string', description: 'ID –∞—É–¥–∏—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)' }
      ],
      exampleRequest: `curl -X POST http://localhost:3001/api/audit/analyze \\
  -H "Content-Type: application/json" \\
  -d '{
    "numbers": [1, 5, 2, 8, 3, 9, 4, 7, 6, 0, 12, 15, 18, 22, 25, 30, 33, 36, 40, 45],
    "auditId": "audit_2025_001"
  }'`,
      exampleResponse: `{
  "success": true,
  "auditId": "audit_2025_001",
  "testResults": {
    "nist": {
      "overallScore": 78.5,
      "passed": true,
      "tests": {
        "frequency": {
          "name": "Frequency (Monobit) Test",
          "passed": true,
          "pValue": 0.234,
          "description": "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω—É–ª–µ–π –∏ –µ–¥–∏–Ω–∏—Ü"
        }
      }
    },
    "diehard": {
      "overallScore": 0,
      "summary": {
        "passed": 0,
        "failed": 0,
        "skipped": 12,
        "total": 12
      }
    },
    "overallScore": 78.5,
    "totalTests": 15,
    "passedTests": 12,
    "failedTests": 3
  },
  "anomalies": [
    {
      "type": "patterns",
      "severity": "medium",
      "message": "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    }
  ],
  "grade": "B",
  "recommendation": "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ª–æ—Ç–µ—Ä–µ—è—Ö —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏"
}`
    }
  ];

  return (
    <Box sx={{ p: 4 }}>
      <motion.div
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
      >
        <Typography 
          variant="h3" 
          gutterBottom 
          sx={{ 
            textAlign: 'center',
            background: 'linear-gradient(45deg, #00d4ff, #ff6b35)',
            backgroundClip: 'text',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent',
            mb: 4
          }}
        >
          üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è ISSentropy
        </Typography>

        <Typography 
          variant="h6" 
          sx={{ 
            textAlign: 'center', 
            color: 'text.secondary',
            mb: 6,
            maxWidth: '800px',
            margin: '0 auto 3rem auto'
          }}
        >
          –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–æ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
        </Typography>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
        <Box sx={{ mb: 6 }}>
          <Typography variant="h4" gutterBottom sx={{ color: '#00d4ff', mb: 3 }}>
            üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
          </Typography>
          
          <Grid container spacing={3}>
            {features.map((feature, index) => (
              <Grid item xs={12} md={6} key={index}>
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                >
                  <Card sx={{ 
                    height: '100%',
                    display: 'flex',
                    flexDirection: 'column',
                    background: 'rgba(20, 20, 40, 0.8)',
                    backdropFilter: 'blur(20px)',
                    border: '1px solid rgba(0, 212, 255, 0.2)',
                    '&:hover': {
                      borderColor: 'rgba(0, 212, 255, 0.4)',
                      boxShadow: '0 12px 40px rgba(0, 212, 255, 0.2)',
                    }
                  }}>
                    <CardContent sx={{ 
                      flex: 1,
                      display: 'flex',
                      flexDirection: 'column'
                    }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                        <Box sx={{ 
                          color: '#00d4ff', 
                          mr: 2,
                          fontSize: '2rem'
                        }}>
                          {feature.icon}
                        </Box>
                        <Typography variant="h6" sx={{ fontWeight: 600 }}>
                          {feature.title}
                        </Typography>
                      </Box>
                      
                      <Typography variant="body2" sx={{ mb: 2, color: 'text.secondary' }}>
                        {feature.description}
                      </Typography>
                      
                      <List dense sx={{ flex: 1 }}>
                        {feature.details.map((detail, idx) => (
                          <ListItem key={idx} sx={{ py: 0.5 }}>
                            <ListItemIcon sx={{ minWidth: 30 }}>
                              <Typography sx={{ color: '#00d4ff' }}>‚Ä¢</Typography>
                            </ListItemIcon>
                            <ListItemText 
                              primary={detail}
                              primaryTypographyProps={{ variant: 'body2' }}
                            />
                          </ListItem>
                        ))}
                      </List>
                    </CardContent>
                  </Card>
                </motion.div>
              </Grid>
            ))}
          </Grid>
        </Box>

        {/* API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è */}
        <Box sx={{ mb: 6 }}>
          <Typography variant="h4" gutterBottom sx={{ color: '#ff6b35', mb: 3 }}>
            üîå API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
          </Typography>
          
          <Paper sx={{ 
            p: 3, 
            background: 'rgba(20, 20, 40, 0.8)',
            backdropFilter: 'blur(20px)',
            border: '1px solid rgba(255, 107, 53, 0.2)'
          }}>
            <Typography variant="h6" gutterBottom sx={{ color: '#ff6b35' }}>
              –ë–∞–∑–æ–≤—ã–π URL: <code style={{ color: '#00ff00' }}>http://localhost:3001/api</code>
            </Typography>
            
            {apiEndpoints.map((endpoint, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
              >
                <Accordion sx={{ 
                  background: 'rgba(0, 0, 0, 0.3)', 
                  mb: 2,
                  '&:before': { display: 'none' }
                }}>
                  <AccordionSummary expandIcon={<ExpandMore sx={{ color: '#00d4ff' }} />}>
                    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%' }}>
                      <Chip 
                        label={endpoint.method} 
                        color={endpoint.method === 'POST' ? 'primary' : 'secondary'}
                        size="small"
                        sx={{ mr: 2 }}
                      />
                      <Typography variant="h6" sx={{ fontFamily: 'monospace', color: '#00d4ff', flex: 1 }}>
                        {endpoint.path}
                      </Typography>
                      <Typography variant="body2" sx={{ color: 'text.secondary', mr: 2 }}>
                        {endpoint.description}
                      </Typography>
                    </Box>
                  </AccordionSummary>
                  <AccordionDetails>
                    <Box>
                      {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã */}
                      {endpoint.parameters.length > 0 && (
                        <Box sx={{ mb: 3 }}>
                          <Typography variant="h6" sx={{ color: '#00ff00', mb: 2 }}>
                            üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
                          </Typography>
                          <Grid container spacing={2}>
                            {endpoint.parameters.map((param, idx) => (
                              <Grid item xs={12} md={6} key={idx}>
                                <Paper sx={{ p: 2, background: 'rgba(0, 255, 0, 0.05)', border: '1px solid rgba(0, 255, 0, 0.2)' }}>
                                  <Typography variant="body1" sx={{ fontWeight: 600, color: '#00ff00' }}>
                                    {param.name}
                                  </Typography>
                                  <Typography variant="body2" sx={{ color: '#ff6b35', mb: 1 }}>
                                    –¢–∏–ø: {param.type}
                                  </Typography>
                                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                                    {param.description}
                                  </Typography>
                                </Paper>
                              </Grid>
                            ))}
                          </Grid>
                        </Box>
                      )}

                      {/* –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ */}
                      <Box sx={{ mb: 3 }}>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <Typography variant="h6" sx={{ color: '#00d4ff' }}>
                            üì§ –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:
                          </Typography>
                          <Tooltip title={copiedCode === `request-${index}` ? '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}>
                            <IconButton 
                              size="small" 
                              onClick={() => copyToClipboard(endpoint.exampleRequest, `request-${index}`)}
                              sx={{ ml: 1 }}
                            >
                              {copiedCode === `request-${index}` ? <CheckCircle color="success" /> : <ContentCopy />}
                            </IconButton>
                          </Tooltip>
                        </Box>
                        <Paper sx={{ p: 2, background: '#1e1e1e', position: 'relative' }}>
                          <Typography variant="body2" sx={{ fontFamily: 'monospace', color: '#00d4ff', whiteSpace: 'pre-wrap' }}>
                            {endpoint.exampleRequest}
                          </Typography>
                        </Paper>
                      </Box>

                      {/* –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ */}
                      <Box>
                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                          <Typography variant="h6" sx={{ color: '#00ff00' }}>
                            üì• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:
                          </Typography>
                          <Tooltip title={copiedCode === `response-${index}` ? '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}>
                            <IconButton 
                              size="small" 
                              onClick={() => copyToClipboard(endpoint.exampleResponse, `response-${index}`)}
                              sx={{ ml: 1 }}
                            >
                              {copiedCode === `response-${index}` ? <CheckCircle color="success" /> : <ContentCopy />}
                            </IconButton>
                          </Tooltip>
                        </Box>
                        <Paper sx={{ p: 2, background: '#1e1e1e', position: 'relative' }}>
                          <Typography variant="body2" sx={{ fontFamily: 'monospace', color: '#00ff00', whiteSpace: 'pre-wrap' }}>
                            {endpoint.exampleResponse}
                          </Typography>
                        </Paper>
                      </Box>
                    </Box>
                  </AccordionDetails>
                </Accordion>
              </motion.div>
            ))}
          </Paper>
        </Box>

        {/* –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
        <Box sx={{ mb: 6 }}>
          <Typography variant="h4" gutterBottom sx={{ color: '#00ff00', mb: 3 }}>
            üíª –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          </Typography>
          
          <Grid container spacing={3}>
            <Grid item xs={12} md={6}>
              <Card sx={{ 
                background: 'rgba(20, 20, 40, 0.8)',
                backdropFilter: 'blur(20px)',
                border: '1px solid rgba(0, 255, 0, 0.2)'
              }}>
                <CardContent>
                  <Typography variant="h6" gutterBottom sx={{ color: '#00ff00' }}>
                    üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö —á–∏—Å–µ–ª
                  </Typography>
                  <Paper sx={{ p: 2, background: '#1e1e1e', mb: 2 }}>
                    <Typography variant="body2" sx={{ fontFamily: 'monospace', color: '#00d4ff' }}>
                      POST /api/generate{'\n'}
                      {'{'}{'\n'}
                      {'  '}"count": 6,{'\n'}
                      {'  '}"min": 1,{'\n'}
                      {'  '}"max": 49,{'\n'}
                      {'  '}"sourcesToUse": ["iss", "cubeacon", "nist"]{'\n'}
                      {'}'}
                    </Typography>
                  </Paper>
                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 6 —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 49 –¥–ª—è –ª–æ—Ç–µ—Ä–µ–∏, –∏—Å–ø–æ–ª—å–∑—É—è –ú–ö–°, CU Beacon –∏ NIST
                  </Typography>
                </CardContent>
              </Card>
            </Grid>
            
            <Grid item xs={12} md={6}>
              <Card sx={{ 
                background: 'rgba(20, 20, 40, 0.8)',
                backdropFilter: 'blur(20px)',
                border: '1px solid rgba(0, 255, 0, 0.2)'
              }}>
                <CardContent>
                  <Typography variant="h6" gutterBottom sx={{ color: '#00ff00' }}>
                    üìä –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞
                  </Typography>
                  <Paper sx={{ p: 2, background: '#1e1e1e', mb: 2 }}>
                    <Typography variant="body2" sx={{ fontFamily: 'monospace', color: '#00d4ff' }}>
                      POST /api/audit/analyze{'\n'}
                      {'{'}{'\n'}
                      {'  '}"numbers": [1, 2, 3, 4, 5, 6]{'\n'}
                      {'}'}
                    </Typography>
                  </Paper>
                  <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                    –ü—Ä–æ–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —á–∏—Å–µ–ª
                  </Typography>
                </CardContent>
              </Card>
            </Grid>
          </Grid>
        </Box>

        {/* –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
        <Box>
          <Typography variant="h4" gutterBottom sx={{ color: '#ffd700', mb: 3 }}>
            üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
          </Typography>
          
          <Grid container spacing={2}>
            <Grid item xs={12} sm={6} md={3}>
              <motion.div
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Card sx={{ 
                  cursor: 'pointer',
                  background: 'rgba(20, 20, 40, 0.8)',
                  backdropFilter: 'blur(20px)',
                  border: '1px solid rgba(255, 107, 53, 0.2)',
                  '&:hover': {
                    borderColor: 'rgba(255, 107, 53, 0.4)',
                    boxShadow: '0 8px 32px rgba(255, 107, 53, 0.2)',
                  }
                }}
                onClick={() => {
                  window.open('https://ru.wikipedia.org/wiki/NIST_SP_800-90A', '_blank');
                }}>
                  <CardContent sx={{ textAlign: 'center' }}>
                    <Description sx={{ fontSize: '3rem', color: '#ff6b35', mb: 1 }} />
                    <Typography variant="h6" sx={{ color: '#ff6b35' }}>
                      –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
                    </Typography>
                    <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                      NIST SP 800-22 –∏ DIEHARD —Ç–µ—Å—Ç—ã
                    </Typography>
                    <Typography variant="caption" sx={{ color: '#ff6b35', fontSize: '0.75rem', mt: 1, display: 'block' }}>
                      –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏—é
                    </Typography>
                  </CardContent>
                </Card>
              </motion.div>
            </Grid>
            
            <Grid item xs={12} sm={6} md={3}>
              <motion.div
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Card sx={{ 
                  cursor: 'pointer',
                  background: 'rgba(20, 20, 40, 0.8)',
                  backdropFilter: 'blur(20px)',
                  border: '1px solid rgba(0, 212, 255, 0.2)',
                  '&:hover': {
                    borderColor: 'rgba(0, 212, 255, 0.4)',
                    boxShadow: '0 8px 32px rgba(0, 212, 255, 0.2)',
                  }
                }}
                onClick={() => {
                  window.open('https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D1%81%D1%82%D1%8B_diehard', '_blank');
                }}>
                  <CardContent sx={{ textAlign: 'center' }}>
                    <Science sx={{ fontSize: '3rem', color: '#00d4ff', mb: 1 }} />
                    <Typography variant="h6" sx={{ color: '#00d4ff' }}>
                      DIEHARD —Ç–µ—Å—Ç—ã
                    </Typography>
                    <Typography variant="body2" sx={{ color: 'text.secondary' }}>
                      –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏
                    </Typography>
                    <Typography variant="caption" sx={{ color: '#00d4ff', fontSize: '0.75rem', mt: 1, display: 'block' }}>
                      –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏—é
                    </Typography>
                  </CardContent>
                </Card>
              </motion.div>
            </Grid>
          </Grid>
        </Box>
      </motion.div>
    </Box>
  );
};

export default DocsPage;
